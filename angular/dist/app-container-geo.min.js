/*
 * app-container-geo
 * Version: 1.0.0 - 2017-01-28
 */
angular.module("app-container-geo.admin",["app-container-file"]).directive("layerCreateInputForm",[function(){return{restrict:"C",templateUrl:"js/admin/layer-create-input-form.html"}}]).directive("exampleLayerProperties",[function(){return{restrict:"AEC",template:'<h4>Example Feature Properties <i uib-popover-template="\'js/admin/layer-create-eprops-popover.html\'" popover-placement="auto bottom" class="fa fa-info-circle" aria-hidden="true"></i></h4><table class="table table-striped table-condensed"><tr><th>Property</th><th>Value</th><th>Type</th><th></th></tr><tr ng-repeat="(prop,pinfo) in preResults.examplePropertiesAnnotated"><td>{{prop}}</td><td>{{pinfo.value}}</td><td>{{pinfo.type}}</td><td><i uib-tooltip="Unique" ng-if="pinfo.unique" class="fa fa-key" aria-hidden="true"></i></td></tr></table>'}}]).controller("LayerCreateCtrl",["$scope","$log","$timeout","$uibModalInstance","WebSocketConnection","File","NotificationService",function(a,b,c,d,e,f,g){var h,i,j=a.STATES={HANDSHAKE:"HANDSHAKE",FILE_UPLOAD:"FILE_UPLOAD",PRE_PROCESS_RUNNING:"PRE_PROCESS_RUNNING",USER_INPUT:"USER_INPUT"};a.infoMessages=[],a.dismiss=function(){function c(){d.dismiss()}a.uploadedFile?(b.debug("dismiss, cleaning up",a.uploadedFile),a.uploadedFile.$remove({id:a.uploadedFile._id},c,g.addError)):c()};var k=new e("geo/initLayer",function(){b.debug("connection to geo/initLayer established."),a.$on("$destroy",k.connectionCloser()),k.onMessage(function(c){a.$apply(function(){switch(b.debug("Message (current state:"+h+")",c),c.key){case"state":h=a.STATE=j[c.toState],i=a.STATE_DATA=c.data;break;case"error":b.error(c.data);break;case"info":b.debug("info: ",c.data),a.infoMessages.push(c.data);break;case"complete":break;default:b.error("unexpected message")}})}),c(function(){h=a.STATE=j.HANDSHAKE},1e3)});a.$watch("STATE",function(c){if(c)switch(b.debug("Entered state ",c),c){case j.HANDSHAKE:k.send({key:"state",currentState:j.HANDSHAKE});break;case j.USER_INPUT:a.preResults=i}}),a.fileResource=f,a.$watch("fileToUpload",function(b){console.log("fileToUpload",b),b&&b.file&&b.$save&&(b.metadata={type:"layerSource"},b.$save(function(b){a.uploadedFile=b,delete a.fileToUpload}))}),a.$watch("uploadedFile",function(c){c&&(b.debug("uploadedFile",c),"application/zip"!==c.contentType?(b.debug("File is not a zip, deleting."),g.addError({statusText:c.fileName+" is not a zip file."}),c.$remove({id:c._id},function(){b.debug("removed "+c.fileName),delete a.uploadedFile},g.addError)):(b.debug("Notifying server of new file, start pre-processing"),k.send({key:"state",currentState:h,data:c._id})))})}]).directive("layerAdmin",["$log","Layer","NotificationService","$uibModal",function(a,b,c,d){return{restrict:"E",templateUrl:"js/admin/layer-admin.html",scope:{},link:function(c,e,f){function g(){c.layers=b.query({})}g(),c.createLayer=function(){d.open({templateUrl:"js/admin/layer-create.html",controller:"LayerCreateCtrl",windowClass:"layer-create",size:"lg",backdrop:"static",keyboard:!1}).result.then(function(){a.debug("layer creation dialog ok"),g()})}}}}]),angular.module("app-container-geo",["app-container-common","templates-app-container-geo","app-container-geo.admin"]).service("Layer",["$appService",function(a){var b=a("geo/layer/:id");return b}]).service("Feature",["$appService",function(a){var b=a("geo/feature/:id");return b}]).factory("MapLayerService",["$q","MapLayer","Feature",function(a,b,c){return{getForPoint:function(d,e){var f=a.defer();return c.get({id:"containingPoint",lat:d,lon:e},function(a){f.resolve(new b(a.list))}),f.promise},getForFeature:function(d){var e=a.defer();return c.get({id:d},function(a){e.resolve(new b([a]))}),e.promise}}}]).factory("MapLayer",["$log","Layer","Feature",function(a,b,c){var d=d3.scaleOrdinal(d3.schemeCategory20),e={strokeColor:"#ffffff",strokeOpacity:null,strokeWeight:1,fillColor:"#aaaaaa",fillOpacity:null,zIndex:0,clickable:!0},f=function(a,b){this.$feature=a,this.$layer=b,this.$isOn=!0;var c=this,d=this.$properties={};a.forEachProperty(function(a,b){d[b]=a}),a.getMapFeature=function(){return c}},g=function(a){(this.$features=a||[]).forEach(function(a){var b=a.data.properties;b.$featureName=a.featureName,b.$layerName=a._layer.name,b.$layerId=a._layer._id,b.$featureId=a._id})};return f.prototype.getBounds=function(){if(!this.$bounds){var a=this.$bounds=new google.maps.LatLngBounds,b=this.$feature.getGeometry(),c=b.getType();if(c&&/Polygon/.test(c)){var d,e,f=b.getArray(),g="Polygon"===c?f:f.reduce(function(a,b){return a.push(b.getArray()[0]),a},[]);for(d=0;d<g.length;d++){var h=g[d].getArray();for(e=0;e<h.length;e++)a.extend(new google.maps.LatLng(h[e].lat(),h[e].lng()))}}}return this.$bounds},f.prototype.$area=function(){var a=this.getBounds(),b=a.getNorthEast(),c=a.getSouthWest();return Math.abs(b.lat()-c.lat())*Math.abs(b.lng()-c.lng())},f.prototype.fit=function(){this.$layer.map().fitBounds(this.getBounds())},f.prototype.on=function(){this.$isOn||(this.$layer.map().data.add(this.$feature),this.$isOn=!0)},f.prototype.off=function(){this.$isOn&&(this.$layer.map().data.remove(this.$feature),this.$isOn=!1)},f.prototype.isOn=function(){return this.$isOn},f.prototype.toggle=function(){return this[this.isOn()?"off":"on"](),this.isOn()},f.prototype.properties=function(){return this.$properties},f.prototype.name=function(){return this.$properties.$featureName},f.prototype.id=function(){return this.$properties.$featureId},f.prototype.layerId=function(){return this.$properties.$layerId},f.prototype.layerName=function(){return this.$properties.$layerName},f.prototype.getFeatureResource=function(){var a=this;return a.$featureResource||(a.$featureResource=c.get({id:a.id()}),a.$featureResource.$promise.then(function(b){b.getMapFeature=function(){return a}})),a.$featureResource.$promise},f.prototype.getLayerResource=function(){var a=this;return a.$layerResource||(a.$layerResource=b.get({id:a.layerId()}),a.$layerResource.$promise.then(function(b){b.getMapFeature=function(){return a}})),a.$layerResource.$promise},g.prototype.map=function(a){return arguments.length?(this.$map=a,this):this.$map},g.prototype.geoJson=function(){return{type:"FeatureCollection",features:this.$features.map(function(a){return a.data})}},g.prototype.add=function(){var b,c=this,g=c.map();return g&&!c.$mapFeatures&&(b=g.data.addGeoJson(c.geoJson()),c.$mapFeatures=b.map(function(a,b){return a.setProperty("$style",angular.extend({},e,{fillColor:d(b)})),new f(a,c)}),c.$mapFeatures.sort(function(a,b){return b.$area()-a.$area()}),c.$mapFeatures.forEach(function(a,b){var c=a.$feature.getProperty("$style");c.zIndex=b}),a.debug("feature stacking order",c.$mapFeatures.reduce(function(a,b){return a.push(b.layerName()+" : "+b.name()),a},[]).join(",")),g.data.setStyle(function(a){return a.getProperty("$style")})),c},g.prototype.fit=function(){return this.$mapFeatures&&this.$mapFeatures.length&&this.$mapFeatures[0].fit(),this},g.prototype.features=function(){return this.$mapFeatures||[]},g.prototype.remove=function(){return this.features().forEach(function(a){a.off()}),this},g}]),angular.module("templates-app-container-geo",["js/admin/layer-admin.html","js/admin/layer-create-eprops-popover.html","js/admin/layer-create-input-form.html","js/admin/layer-create.html"]),angular.module("js/admin/layer-admin.html",[]).run(["$templateCache",function(a){a.put("js/admin/layer-admin.html",'<h1>Layer Administration</h1>\n<button class="btn btn-default" ng-click="createLayer()">New Layer</button>\n<ul>\n    <li ng-repeat="l in layers.list">\n        <label>{{l.name}}</label>\n        {{l._sourceFile.filename}}\n    </li>\n</ul>\n')}]),angular.module("js/admin/layer-create-eprops-popover.html",[]).run(["$templateCache",function(a){a.put("js/admin/layer-create-eprops-popover.html",'<div>\n    <p>The properties below represent the superset of all available properties\n        across all features within your new layer.  Displayed values are pulled\n        from first feature to have the given property set.</p>\n\n    <p>Properties flagged with the <i class="fa fa-key" aria-hidden="true"></i>\n        icon have values that are unique across all features within your new layer.</p>\n\n    <p>If a property has an explicit type (e.g. <code>string</code>,<code>number</code>\n        or <code>boolean</code>) then this indicates the property is available\n        on all features and has a consistent type across them.</p>\n\n    <p>A property type of <code>mixed</code> almost certainly indicates that\n        property in question is either unset or is <code>null</code>\n        for some features.</p>\n</div>\n')}]),angular.module("js/admin/layer-create-input-form.html",[]).run(["$templateCache",function(a){a.put("js/admin/layer-create-input-form.html",'<form>\n    <div class="form-group">\n        <label for="inputFile">Source File</label>\n        <div id="inputFile" class="file-info" file="uploadedFile"></div>\n    </div>\n    <div class="form-group">\n        <label for="layerName">Layer Name *</label>\n        <input id="layerName" type="text" class="form-control"\n               ng-model="userInput.layerName" required />\n    </div>\n    <div class="form-group">\n        <label for="featureIdFmt">Feature Id Format *</label>\n        <input id="featureIdFmt" type="text" class="form-control"\n               ng-model="userInput.featureIdFmt" required />\n    </div>\n    <div class="form-group">\n        <label for="featureNameFmt">Feature Id Format *</label>\n        <input id="featureNameFmt" type="text" class="form-control"\n               ng-model="userInput.featureNameFmt" required />\n    </div>\n    <div class="form-group">\n        <label for="layerSource">Layer Source</label>\n        <input id="layerSource" type="url" class="form-control"\n               ng-model="userInput.layerSource" />\n    </div>\n</form>\n')}]),angular.module("js/admin/layer-create.html",[]).run(["$templateCache",function(a){a.put("js/admin/layer-create.html",'<div class="clearfix modal-header">\n    <ul class="list-inline pull-right">\n        <li class="spinner" is-working="!STATE || [STATE.FILE_UPLOAD,STATE.USER_INPUT].indexOf(STATE) !== -1"></li>\n        <li><a href class="pull-right" ng-click="dismiss()"><i class="fa fa-times-circle-o fa-2x"></i></a></li>\n    </ul>\n\n    <h2>Create Layer</h2>\n</div>\n<div class="clearfix modal-body">\n    <p ng-if="!STATE">Waiting to establish connection...</p>\n\n    <div ng-show="STATE === STATES.FILE_UPLOAD">\n        <p>Start by uploading the source of your layer (currently only zipped shapfile).</p>\n        <input type="file" file-model="fileToUpload" file-resource="fileResource" />\n    </div>\n\n    <div ng-show="STATE === STATES.USER_INPUT">\n        <div class="example-layer-properties"></div>\n        <p>Your new layer will have <mark>{{preResults.featureCount}}</mark> features (assuming they can all\n            be successfully indexed).</p>\n        <div class="layer-create-input-form"></div>\n        <pre>{{preResults | json}}</pre>\n    </div>\n</div>\n')}]);